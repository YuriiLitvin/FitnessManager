// <auto-generated />
using System;
using EF_HomeWork_4_CORE;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EF_HomeWork_4_CORE.Migrations
{
    [DbContext(typeof(FitnessDbContext))]
    [Migration("20200903120702_MyFirstMigration")]
    partial class MyFirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EF_HomeWork_4_CORE.Entity.Coach", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("TypeOfTraining")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Coaches");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "petrovich@gmail.com",
                            FullName = "Petrovich",
                            MobileNumber = "09923",
                            TypeOfTraining = 1
                        },
                        new
                        {
                            Id = 2,
                            Email = "samson@gmail.com",
                            FullName = "Samson",
                            MobileNumber = "097325",
                            TypeOfTraining = 2
                        },
                        new
                        {
                            Id = 3,
                            Email = "sashkapower@gmail.com",
                            FullName = "Oleksandr I",
                            MobileNumber = "09544234",
                            TypeOfTraining = 3
                        },
                        new
                        {
                            Id = 4,
                            Email = "g_anna@gmail.com",
                            FullName = "Anna G.",
                            MobileNumber = "0930954",
                            TypeOfTraining = 0
                        });
                });

            modelBuilder.Entity("EF_HomeWork_4_CORE.Entity.Gym", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("TrainingPeolpeCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Gyms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Sparta",
                            TrainingPeolpeCount = 100
                        },
                        new
                        {
                            Id = 2,
                            Title = "FitnessLife",
                            TrainingPeolpeCount = 150
                        });
                });

            modelBuilder.Entity("EF_HomeWork_4_CORE.Entity.Workout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CoachId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FinishTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("GymId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("TypeOfTraining")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CoachId");

                    b.HasIndex("GymId");

                    b.ToTable("Workouts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CoachId = 4,
                            FinishTime = new DateTime(2020, 8, 27, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            GymId = 1,
                            StartTime = new DateTime(2020, 8, 27, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeOfTraining = 0
                        },
                        new
                        {
                            Id = 2,
                            CoachId = 2,
                            FinishTime = new DateTime(2020, 8, 27, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            GymId = 2,
                            StartTime = new DateTime(2020, 8, 27, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeOfTraining = 2
                        },
                        new
                        {
                            Id = 3,
                            CoachId = 3,
                            FinishTime = new DateTime(2020, 8, 27, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            GymId = 1,
                            StartTime = new DateTime(2020, 8, 27, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeOfTraining = 3
                        },
                        new
                        {
                            Id = 4,
                            CoachId = 1,
                            FinishTime = new DateTime(2020, 8, 27, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            GymId = 2,
                            StartTime = new DateTime(2020, 8, 27, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeOfTraining = 1
                        });
                });

            modelBuilder.Entity("EF_HomeWork_4_CORE.Entity.Workout", b =>
                {
                    b.HasOne("EF_HomeWork_4_CORE.Entity.Coach", "Coach")
                        .WithMany("Workouts")
                        .HasForeignKey("CoachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EF_HomeWork_4_CORE.Entity.Gym", "Gym")
                        .WithMany("Workouts")
                        .HasForeignKey("GymId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
